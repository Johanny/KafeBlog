<?php

namespace Kafe\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
    public function getArticles($nombreParPage, $page)
    {
        $query = $this->createQueryBuilder('a')
                      ->leftJoin('a.image','i')
                        ->addSelect('i')
                      ->leftJoin('a.categories','c')
                        ->addSelect('c')
                      ->orderBy('a.date', 'DESC')
                      ->getQuery();

        // On définit l'article à partir duquel commencer la liste
        $query->setFirstResult(($page-1) * $nombreParPage)
        // Ainsi que le nombre d'articles à afficher
              ->setMaxResults($nombreParPage);

        // Enfin, on retourne l'objet Paginator correspondant à la requête construite
        return new Paginator($query);
    }
    
    public function getAvecCategories(array $nom_categories)
    {
        $queryBuilder = $this->createQueryBuilder('a');

        // On fait une jointure avec l'entité Categorie, avec pour alias « c »
        $queryBuilder->join('a.categories', 'c')
                     ->where($queryBuilder->expr()->in('c.nom', $nom_categories)); // Puis on filtre sur le nom des catégories à l'aide d'un IN

        // Enfin, on retourne le résultat
        return $queryBuilder->getQuery()
                            ->getResult();
    }
    
    public function getDernier($limit)
    {
        $queryBuilder = $this->createQueryBuilder('a');
        
        $queryBuilder->orderBy('a.date','DESC')
                     ->setMaxResults($limit);
        
        return $queryBuilder->getQuery()
                            ->getResult();
    }
}
